name: Build
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn

      - name: Execute Tests
        run: yarn test

      - name: Verify that NPM module builds
        run: yarn bundle

      - name: Verify that Docker image builds
        run: docker build .


  npm:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Initialize Output
        run: echo "::set-output name=didpublishnpm::false"

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Fetch tags
        run: |
          git fetch --tags
          if git describe --exact-match --match "v*.*.*" HEAD^2
          then
            echo "Found version commit tag. Publishing."
            echo "::set-env name=npmpublish::true"
          else
            echo "Version commit tag not found. Not publishing."
          fi

      - name: Setup Node
        if: env.npmpublish
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install dependencies
        if: env.npmpublish
        run: yarn

      - name: Bundle module (create ./dist dir)
        if: env.npmpublish
        run: yarn bundle

      - name: Publish
        if: env.npmpublish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
          npm publish --access public ./dist
          echo "::set-output name=didpublishnpm::true"


  docker:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test, npm]

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Detect Dockerfile changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dockerchanged:
              - 'Dockerfile'

      - name: Should Build?
        if: steps.filter.outputs.dockerchanged == 'true' || needs.npm.outputs.didpublishnpm == 'true'
        run: |
          echo "Dockerfile changed, and/or new NPM module published. Need to update Docker image."
          echo '::set-env name=need_docker_build::true'

      - name: Login to DockerHub Registry
        if: env.need_docker_build
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build the latest Docker image
        if: env.need_docker_build
        run: docker build . --file Dockerfile --tag jupiterone/pspbuilder:latest

      - name: Push the latest Docker image
        if: env.need_docker_build
        run: docker push jupiterone/pspbuilder:latest

  docker-extras:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test, npm]

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Detect Dockerfile changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dockerchanged:
              - 'Dockerfile-extras'

      - name: Should Build?
        if: steps.filter.outputs.dockerchanged == 'true' || needs.npm.outputs.didpublishnpm == 'true'
        run: |
          echo "Dockerfile changed, and/or new NPM module published. Need to update Docker-extras image."
          echo '::set-env name=need_docker_build::true'

      - name: Login to DockerHub Registry
        if: env.need_docker_build
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build the latest Docker image
        if: env.need_docker_build
        run: docker build . --file Dockerfile-extras --tag jupiterone/pspbuilder-extras:latest

      - name: Push the latest Docker image
        if: env.need_docker_build
        run: docker push jupiterone/pspbuilder-extras:latest
